@code
{

    private DateTime Today = new DateTime(DateTime.Now.Year, DateTime.Now.Month, DateTime.Now.Day);


    /// <summary>
    /// Año actual.
    /// </summary>
    private int CurrentYear = DateTime.Now.Year;


    /// <summary>
    /// Mes actual.
    /// </summary>
    private int CurrentMonth = DateTime.Now.Month;


    protected override async void OnInitialized()
    {
        var token = LIN.Access.Calendar.Session.Instance.Token;
        var x = await Access.Calendar.Controllers.Events.ReadAll(token);
        eventos = x.Models;
        StateHasChanged();
    }


    List<Types.Calendar.Models.EventModel> eventos = new();


}


<div class="wrapper">

    <div class="flex flex-col">

        <label class="text-5xl font-bold dark:text-zinc-200">@(new DateTime(CurrentYear, CurrentMonth, 1).ToString("yyyy"))</label>
        <label class="text-3xl text-zinc-700 dark:text-zinc-300">@(new DateTime(CurrentYear, CurrentMonth, 1).ToString("MMMM"))</label>

    </div>

    <header>
        <div class="mt-3 flex gap-3">

            <button @onclick="E" class="h-5 w-5 bg-transparent">
                <svg class="h-full w-full fill-zinc-600 dark:fill-zinc-300" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><!--!Font Awesome Free 6.5.2 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.--><path d="M9.4 233.4c-12.5 12.5-12.5 32.8 0 45.3l192 192c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L77.3 256 246.6 86.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0l-192 192z" /></svg>
            </button>

            <button @onclick="A" class="h-5 w-5 bg-transparent">
                <svg class="h-full w-full fill-zinc-600 dark:fill-zinc-300" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><!--!Font Awesome Free 6.5.2 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.--><path d="M310.6 233.4c12.5 12.5 12.5 32.8 0 45.3l-192 192c-12.5 12.5-32.8 12.5-45.3 0s-12.5-32.8 0-45.3L242.7 256 73.4 86.6c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0l192 192z" /></svg>
                </button>

        </div>
    </header>


    <div class="calendar mt-3">
        <ul class="weeks rounded-lg bg-zinc-100 p-1 text-zinc-500 dark:bg-zinc-900 dark:text-zinc-400">
            <li>DO</li>
            <li>LU</li>
            <li>MA</li>
            <li>MI</li>
            <li>JU</li>
            <li>VI</li>
            <li>SA</li>
        </ul>

        <ul class="days">

            @{
                int firstDayOfMonth = new DateTime(CurrentYear, CurrentMonth, 1).DayOfWeek.GetHashCode();
                int lastDateOfMonth = DateTime.DaysInMonth(CurrentYear, CurrentMonth);
                int lastDayOfMonth = new DateTime(CurrentYear, CurrentMonth, lastDateOfMonth).DayOfWeek.GetHashCode();
                int lastDateOfLastMonth = (new DateTime(CurrentYear, CurrentMonth, 1)).AddDays(-1).Day;
            }

            @for (int i = firstDayOfMonth; i > 0; i--)
            {
                <li class="group flex items-center justify-center">
                    <div class="flex h-9 w-9 items-center justify-center rounded-full text-gray-400 group-hover:bg-gray-100 dark:group-hover:bg-blue-500/20">
                        @(lastDateOfLastMonth - i + 1)
                    </div>
                </li>
            }

            @for (int i = 1; i <= lastDateOfMonth; i++)
            {

                var time = new DateTime(CurrentYear, CurrentMonth, i);

                var filter = eventos.Where(t =>
                {
                    var actual = new DateTime(t.DateStart.Year, t.DateStart.Month, t.DateStart.Day);
                    return actual == time;
                });

                var have = filter.Any();
                var today = time == Today;

                <li class="group flex items-center justify-center">
                    <div class="flex h-10 w-10 items-center justify-center rounded-full text-black dark:text-zinc-200 group-hover:bg-gray-100 dark:group-hover:bg-blue-500/30 @(today?"bg-blue-500 group-hover:bg-blue-600 text-white":"") @(have?"bg-indigo-500 text-white group-hover:bg-indigo-300":"")">
                        <span class="text-base">@i</span>
                    </div>
                </li>
            }

            @for (int i = lastDayOfMonth; i < 6; i++)
            {
                <li class="group flex items-center justify-center">
                    <div class="flex h-9 w-9 items-center justify-center rounded-full text-gray-400 group-hover:bg-gray-100 dark:group-hover:bg-blue-500/20">
                        @(i - lastDayOfMonth + 1)
                    </div>
                </li>

            }



        </ul>
    </div>
</div>







@functions {

    void A()
    {
        var newDate = new DateTime(CurrentYear, CurrentMonth, 1).AddMonths(1);
        CurrentMonth = newDate.Month;
        CurrentYear = newDate.Year;
        StateHasChanged();
    }

    void E()
    {
        var newDate = new DateTime(CurrentYear, CurrentMonth, 1).AddMonths(-1);
        CurrentMonth = newDate.Month;
        CurrentYear = newDate.Year;
        StateHasChanged();
    }
}